{"version":3,"file":"jquery.slidingDeck.min.js","sources":["jquery.slidingDeck.js"],"sourcesContent":["/**\n * jQuery Sliding Deck (https://github.com/jonpontet/jquery-sliding-deck)\n * v0.2.0-beta.0\n */\n\n/*global define, window, document, jQuery, exports, require */\n\n(function (factory) {\n  \"use strict\";\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object' && typeof require === 'function') {\n    // Browserify\n    factory(require('jquery'), window, document);\n  } else {\n    // Browser globals\n    factory(jQuery, window, document);\n  }\n}(function ($) {\n  'use strict'\n\n  class SlidingDeck {\n    constructor(el, options) {\n      let self = this;\n\n      this.$el = $('body');\n      this.options = $.extend({}, SlidingDeck.defaults, options);\n      this.$cards = [];\n      this.$cards = this.$el.find(this.options.cards);\n      this.$ghostCard = $('<div class=\"' + this.options.classes.cardBase + ' ' +\n        this.options.classes.cardGhost + '\">');\n      this.isScrollingDown = true;\n      this.lastScrollTop = 0;\n      this.hasInitialized = false;\n      this.hasUninitialized = false;\n\n      this.maybeInitialize();\n      $(window).on('resize.maybeInitialize', function () {\n        self.maybeInitialize();\n      });\n    }\n\n\n    maybeInitialize() {\n      if ($(window).width() >= this.options.minDeviceWidth) {\n        this.unInitBasicView();\n        if (!this.hasInitialized) {\n          this.hasInitialized = true;\n          this.hasUninitialized = false;\n          this.init();\n        } \n      } else {\n      this.initBasicView();\n       if (this.hasInitialized && !this.hasUninitialized) {\n        this.hasUninitialized = true;\n        this.hasInitialized = false;\n        this.unInit();\n       }\n      }\n    }\n\n    init() {\n      let self = this;\n      $('body').addClass('jsd');\n\n      // Define default height for all cards\n      this.cardsHeight = $(window).height();\n      if (this.options.height !== 'full') {\n        if (this.options.height === 'auto') {\n          this.cardsHeight = '';\n        } else {\n          this.cardsHeight = parseInt(this.options.height);\n        }\n      }\n\n      // Init positioning of all cards\n      this.$cards.each(function (i, card) {\n        $(card)\n          .addClass(self.options.classes.cardBase)\n          .height(self.cardsHeight)\n          .data('offsetTop', self.getCardTop(i))\n          .css({\n            'top': self.getCardTop(i) + 'px',\n            'zIndex': self.options.zIndexBase * (i + 1)\n          });\n\n        // Add a ghost card that will sit behind the last card\n        // so that cards remain correctly positioned when the last card is active\n        if (self.$cards.length - 1 === i) {\n          self.$ghostCard\n            .height(self.cardsHeight)\n            .css({\n              'top': self.getCardTop(i) + 'px',\n              'zIndex': self.options.zIndexBase * i\n            })\n            .insertAfter(card);\n        }\n      });\n\n      $(window).off('resize.setMinHeight');\n\n      this.positionCards();\n      $(window).on('resize.positionCards scroll.positionCards', function () {\n        self.setScrollDirection();\n        self.positionCards();\n      });\n    }\n\n    initBasicView() {\n      var self = this;\n      this.setMinHeight();\n      $(window).on('resize.setMinHeight', function () {\n        self.setMinHeight();\n      });\n    }\n\n    unInitBasicView() {\n      this.unSetMinHeight();\n      $(window).off('resize.setMinHeight');\n    }\n\n    setMinHeight() {\n      this.$cards.css('minHeight', $(window).height() + 'px');\n    }\n\n    unSetMinHeight() {\n      this.$cards.css('minHeight', '');\n    };\n\n    unInit() {\n      let self = this;\n      $('body').removeClass('jsd');\n\n      this.$cards.each(function (i, card) {\n        $(card)\n          .removeClass(self.options.classes.cardBase)\n          .removeClass(self.options.classes.cardActive)\n          .removeClass(self.options.classes.cardFixed)\n          .removeClass(self.options.classes.cardPrevious)\n          .removeClass(self.options.classes.cardNext)\n          .height('auto')\n          .removeData('offsetTop')\n          .css({\n            'top': 'auto',\n            'zIndex': 'auto'\n          });\n\n        if (self.$ghostCard.length) {\n          self.$ghostCard.remove();\n        }\n      });\n\n      $(window).off('resize.positionCards scroll.positionCards');\n    }\n\n    getCardTop(i) {\n      return this.cardsHeight * i;\n    }\n\n    setScrollDirection() {\n      this.isScrollingDown = $(window).scrollTop() > this.lastScrollTop;\n      this.lastScrollTop = $(window).scrollTop() <= 0 ? 0 : $(window).scrollTop();\n    }\n\n    positionCards() {\n      let self = this;\n      this.$cards.each(function (i, card) {\n        let $card = $(card),\n          offsetTop = $card.data('offsetTop'),\n          jsdScrollTop = $(window).scrollTop(),\n          isLastCard = (self.$cards.length - 1) === i;\n\n\n        if (self.isScrollingDown) {\n\n          if (jsdScrollTop >= offsetTop &&\n            !$card.hasClass(self.options.classes.cardActive) &&\n            !$card.hasClass(self.options.classes.cardPrevious)) {\n            // Activate next card\n\n            // Current active card becomes previous card\n            if (i - 1 >= 0) {\n              $(self.$cards[i - 1])\n                .removeClass(self.options.classes.cardActive)\n                .addClass(self.options.classes.cardPrevious);\n            }\n\n            // Make this card active\n            $card\n              .addClass([self.options.classes.cardFixed, self.options.classes.cardActive])\n              .removeClass([self.options.classes.cardPrevious, self.options.classes.cardNext])\n              .css('top', '')\n              .css('zIndex', -1);\n\n            // Show the ghost card if this is the last card\n            if (isLastCard) {\n              self.$ghostCard.show();\n            }\n\n            // Set the next card\n            if (self.$cards.length > i + 1) {\n              $(self.$cards[i + 1]).addClass(self.options.classes.cardNext);\n            }\n          }\n        } else {\n          // Scroll up\n\n          if (jsdScrollTop < offsetTop &&\n            $card.hasClass(self.options.classes.cardActive)) {\n            // Deactivate the current active card\n\n            // Remove current next card\n            $(self.$cards)\n              .filter('.' + self.options.classes.cardNext)\n              .removeClass(self.options.classes.cardNext);\n\n            // Make this card inactive and next\n            $card\n              .addClass(self.options.classes.cardNext)\n              .removeClass([self.options.classes.cardFixed, self.options.classes.cardActive])\n              .css('top', $card.data('offsetTop') + 'px')\n              .css('zIndex', '');\n\n            // Set next active card\n            if (i - 1 >= 0) {\n              $(self.$cards[i - 1])\n                .removeClass(self.options.classes.cardPrevious)\n                .addClass(self.options.classes.cardActive);\n            }\n\n            // Hide the ghost card\n            if (isLastCard) {\n              self.$ghostCard.hide();\n            }\n          }\n        }\n      });\n    }\n  }\n\n  $.SlidingDeck = SlidingDeck;\n\n  SlidingDeck.defaults = {\n    cards: 'section',\n    height: 'full',\n    zIndexBase: 10,\n    minDeviceWidth: 0,\n    classes: {\n      cardBase: 'jsd-card',\n      cardActive: 'jsd-card--active',\n      cardFixed: 'jsd-card--fixed',\n      cardPrevious: 'jsd-card--previous',\n      cardNext: 'jsd-card--next',\n      cardGhost: 'jsd-card--ghost',\n    }\n  };\n\n  $.fn.slidingDeck = function (options) {\n    let dataKey = 'slidingDeck',\n      instance = $(this).data(dataKey);\n    // If instance already exists, destroy it\n    if (instance && instance.dispose) {\n      instance.dispose();\n    }\n    instance = new SlidingDeck(this, options);\n    $(this).data(dataKey, instance);\n\n    return this;\n  };\n}));"],"names":["factory","define","amd","exports","require","window","document","jQuery","$","SlidingDeck","constructor","el","options","self","this","$el","extend","defaults","$cards","find","cards","$ghostCard","classes","cardBase","cardGhost","isScrollingDown","lastScrollTop","hasInitialized","hasUninitialized","maybeInitialize","on","width","minDeviceWidth","unInitBasicView","init","initBasicView","unInit","addClass","cardsHeight","height","parseInt","each","i","card","data","getCardTop","css","top","zIndex","zIndexBase","length","insertAfter","off","positionCards","setScrollDirection","setMinHeight","unSetMinHeight","removeClass","cardActive","cardFixed","cardPrevious","cardNext","removeData","remove","scrollTop","$card","offsetTop","jsdScrollTop","isLastCard","hasClass","show","filter","hide","fn","slidingDeck","dataKey","instance","dispose"],"mappings":"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"}